plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.example.freezebook"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.freezebook"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdkVersion 23 // Change this to 23
        targetSdkVersion 33 // or the latest version you are using
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def versionClass = 1 // Set this based on your logic (1 for Android, etc.)
            def date = new Date()
            def formattedDate = date.format('MM.dd')
            def versionCode = variant.versionCode // Use the actual version code from the variant
            def versionName = 1 // Use the actual version name from the variant

            // Set the new APK name
            outputFileName = "Freezebook-v.${versionName}.${versionClass}.${formattedDate}.${versionCode}.apk"
        }
    }
}

flutter {
    source = "../.."
}
